<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    <mapper namespace="shop.mtcoding.bankapp.model.history.HistoryRepository">
        <select id="findAll" resultType="shop.mtcoding.bankapp.model.history.History">
            select * from history_tb
        </select>

        <select id="findById" resultType="shop.mtcoding.bankapp.model.history.History">
            select * from history_tb where id = #{id}
        </select>

        <select id="findByGubun" resultType="shop.mtcoding.bankapp.dto.history.HistoryResDto">

            <if test = "gubun == 'withdraw'">
                select ht.amount, 
                    case when ht.w_account_id = #{accountId} then ht.w_balance
                    when ht.d_account_id = #{accountId} then ht.d_balance
                    end as balance,
                wat.number sender, 'ATM' receiver, ht.created_at
                from history_tb ht
                inner join account_tb wat
                on ht.w_account_id = wat.id
                where ht.w_account_id=#{accountId};
            </if>
                
            <if test = "gubun == 'deposit'">
                select ht.amount, 
                    case when ht.w_account_id = #{accountId} then ht.w_balance
                    when ht.d_account_id = #{accountId} then ht.d_balance
                    end as balance,
                dat.number sender , 'ATM' receiver, ht.created_at
                from history_tb ht
                inner join account_tb dat
                on ht.d_account_id = dat.id
                where ht.d_account_id=#{accountId};
            </if>

            <if test = "gubun == 'all'">
                select ht.amount, 
                    case when ht.w_account_id = #{accountId} then ht.w_balance
                    when ht.d_account_id = #{accountId} then ht.d_balance
                    end as balance,
                nvl(wat.number, 'ATM') sender, nvl (dat.number,  'ATM') receiver, ht.created_at
                from history_tb ht
                left outer join account_tb wat
                on ht.w_account_id=wat.id
                left outer join account_tb dat
                on ht.d_account_id = dat.id
                where ht.w_account_id =#{accountId} or ht.d_account_id=#{accountId};
            </if>
            
        </select>

        <insert id="insert">
            insert into history_tb(amount, w_balance, d_balance, w_account_id, d_account_id, created_at)
            values(#{amount}, #{wBalance},  #{dBalance},  #{wAccountId}, #{dAccountId}, now())
        </insert>

        <delete id="deleteById" >
            delete from history_tb where id = #{id}
        </delete>
        <update id="updateById" >
            update history_tb
            set amount= #{amount}, w_balance= #{wBalance}, d_balance= #{dBalance}, w_account_id = #{wAccountId}, d_account_id = #{dAccountId} where id = #{id}
        </update>
    </mapper>